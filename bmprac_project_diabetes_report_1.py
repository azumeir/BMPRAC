# -*- coding: utf-8 -*-
"""BMPRAC Project: Diabetes Report 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12m1xQwJJRXuFaAwf4Gh4E_cxj9tVv_il

# **Summary**

This project focuses on investigating patterns in the variables that affect the diagnosis of diabetes, using two main markers, HbA1c and fasting plasma glucose on US residents based on NHANES data, supported by findings from other studies. We analyzed how the threshold of these markers vary based on different demographic groups. This allowed us to identify any inconsistencies during diagnosis, emphasizing the risk of misclassification when relying on the results of only one marker. Lastly, we assess how well self-reported diabetes statistics aligns with the clinical diagnostic criteria, and track the annual trends of HbA1c and FPG levels over time.

# **Background and rational**

### Issues that this research question addresses

Over the course of many years, the number of people diagnosed with diabetes has increased significantly, with around 1.2 million new diagnoses annually. In 2021, 38.1 million American adults -- 1 in 9 individuals -- were diagnosed with diabetes. Surprisingly, 97.6 million American adults were reported to be diagnosed with prediabetes. However, among the 38.1 million adults with diabetes, 8.7 million of them were undiagnosed. While this undiagnosed rate may seem humble relative to the entire U.S. population, it is far more worrisome on a global scale as 239.7 million diabetic adults -- nearly one in two -- were unaware of their condition.

There are several reasons that promote this diagnostic gap. To begin with, a lack of awareness and health education, particularly in underdeveloped nations, means many are not knowledgeable of the indications of diabetes or may have misconceptions about the disease. Next, limited or irregular health screening, especially among younger adults under the age of 45 further contributes to delayed or missed diagnoses. Most importantly, diagnostic limitations in the biomarkers used – Hemoglobin A1c (HbA1c) and Fasting Plasma Glucose (FPG) – may lead to misclassification if only one test is conducted. Carson et al. (2010) found that while there is reasonable agreement between HbA1c ≥ 6.5% and FPG ≥ 126 mg/dL for diagnosing diabetes, they do not consistently identify the same individuals, emphasizing the risk of misclassification when relying on one biomarker.

Furthermore, the latest trends show a 1-2% decrease in undiagnosed diabetes, likely attributed to improved screening. However, Michael et al. (2022) warned that using only a single unusual biomarker to define diabetes leads to exaggeration of diabetes prevalence. Therefore, confirmation with a second test is proposed to increase diagnostic confidence.

This study further allows us to attain a deeper understanding of diagnostic discrepancies across different demographic groups. For example, different genders, ethnic groups or ages might have different prevalence rates of getting diabetes.

Taken together, this research question intends to assess how the 2 biomarkers –HbA1c and FPG– identify diabetes and prediabetes across different demographic groups, and how these laboratory-based measures contrast to individuals’ self-reported diabetes status.

### Why is this research question important?

From a public health perspective, this study allows individuals to understand the significance of using both HbA1c and FPG tests together to reduce the number of undiagnosed individuals. Consequently, these patients would be able to make changes to their lifestyle or get treatment done in time in order to prevent health complications. This research also provides an insight on which demographic group has a higher prevalence of diabetes and prediabetes, allowing for targeted interventions and resource allocation.

From a biomedical science point of view, the findings from this research question would be able to tell us the diagnostic validity of HbA1c and FPG. It addresses the question of “Which biomarker (HbA1c or FPG) is more accurate and clinically useful for diagnosing prediabetes and diabetes?” Furthermore,it allows us to contribute to refining diagnostic thresholds. Letting us rethink whether the current cutoff (6.5% HbA1c or 126 mg/dL FPG) is appropriate or needs to be reduced, since so many people remain undiagnosed under the current criteria or as mistakenly self-reported as diabetic.

### How does this project extend existing work?

Existing research often assume that individuals with diabetes or prediabetes are accurately recognized based on self-reported information. This assumption, however, fails to acknowledge a significant gap—misclassification, in which individuals with diabetes or prediabetes go undiagnosed or are misidentified due to potential dependence on a single biomarker (HbA1c or FPG). Geiss et al. (2018) highlighted that depending on one test may inflate the prevalence of undiagnosed diabetes by as much as 60%, and advised that a follow-up confirmatory test should be conducted to enhance diagnostic accuracy. Moreover, self-reported data may misclassify diagnosed individuals as undiagnosed due to reporting errors. To address this issue, our project collected NHANES data, which combines self-reports with both HbA1c and FPG laboratory tests to capture both diagnosed and undiagnosed cases of diabetes, thereby better estimate the true prevalence of diabetes in the U.S. population.

Most of the existing work uses older NHANES data to analyze their result, for example, from 1999 to 2006, in comparing self-reported diabetes and undiagnosed diabetes using HbA1c and FPG. This project is more up-to-date since it focuses on more recent data from 2007 to 2023 and helps in reflecting the current clinical practice and guidelines. The result we gain from this project would be more relevant to the current practice compared to the existing work that has been done. We also explore the trends over a long period of time, which provides a bigger sample size, allowing us to analyze the subgroups.

### How do we use NHANES data?

Using data from the National Health and Nutrition Examination Survey (NHANES), we are able to get data that combines interviews, examinations, laboratory, medication use, demographics and diet.

We are able to search for our primary biomarkers, Fasting Glucose (LBXGLU) and HbA1c (LBXGH), which are the main criteria in identifying diabetes in patients. NHANES also provides standardized data on sex, race/ethnicity, income, and education, which we use to analyse discrepancies and variation. The questionnaire feedback data allows us to identify self-reported vs non-self-reported diabetes. The medication data provides us with the medication consumed, which is a variable that we need to take into account as it would affect glucose levels in patients, affecting the accuracy of the analysis.

# Research question and objectives

### Our research question

How accurately do HbA1c and Fasting Plasma Glucose identify prediabetes and diabetes across different demographic groups, and how do these measures compare with self-reported diabetes status among U.S. residents?

### Our objectives

1) How does the prevalence of prediabetes and diabetes (based on LBXGLU and LBXGH thresholds) vary by demographic factors such as sex, race/ethnicity, and socioeconomic status?

2) What proportion of individuals identified as prediabetic/diabetes by HbA1c are missed by fasting glucose criteria, and vice versa, using the data from 2007 to 2023?

3) Among those who self-report diabetes, how many have HbA1c <6.5% or fasting glucose <126 mg/dL (i.e., potentially well-controlled or misclassified)?

# First objective

How does the prevalence of prediabetes and diabetes (based on LBXGLU and LBXGH thresholds) vary by demographic factors such as sex, race/ethnicity, and age?

Defined by abnormally high blood glucose levels, diabetes is a long-term condition where the body is unable to produce or react to insulin. Leaving it untreated can cause serious body complications. While prediabetes, which is a precursor to type 2 diabetes, is when blood glucose concentration is elevated, but not high enough to be diabetes. Advancement from prediabetes to type 2 diabetes can be delayed or prevented if detected early.


Therefore, understanding how the prevalence of prediabetes and diabetes varies by different demographic factors is imperative. This report utilises statistics from NHANES, specifically centering on 2 biomarkers: Fasting Plasma Glucose (LBXGLU) and Haemoglobin A1c (LBXGH). These biomarkers provide us with standardized blood sugar level measurements in the U.S.



LBXGLU measures the amount of glucose in the blood after fasting for at least 8 hours.
Thresholds:

- Normal: <100 mg/dL

- Prediabetes: 100-125 mg/dL

- Diabetes: ≥ 126 mg/dL

LBXGH measures the percentage of haemoglobin in the blood that has glucose attached to it. It reflects average blood sugar levels over the past 2-3 months
Thresholds:

- Normal: <5.7%

- Prediabetes: 5.7-6.4%

- Diabetes: ≥ 6.5%

These biomarker thresholds form the basis for identifying the prevalence of prediabetes and diabetes in the U.S population.

Our aim is to understand patterns in how common diabetes and prediabetes are among different groups of people. We want to find out. Do men or women have a higher prevalence of diabetes? Do certain racial groups have higher rates? Does age affect diabetes risk? Identifying such disparities can help inform targeted public health interventions and resource allocation.

Sex: Male vs Female

According to NHANES data 1999-2000,  males have a higher prevalence of diabetes and prediabetes compared to females. During this period, 9.3% of men were diagnosed with diabetes compared to 8.1% of women. Similarly, for prediabetes, 8.3% of men had prediabetes, while women had a lower prevalence at 4.5%.


This trend is further supported by NHANES data 2017-2020, males were also found to have a higher prevalence of diabetes and prediabetes compared to females. During this period, 15.4% of men were diagnosed with diabetes compared to 14.1% of women. Similarly, for prediabetes, 41.9% of men had prediabetes, while women had a lower prevalence at 34.3%.


The consistently higher prevalence of both diabetes and prediabetes in men emphasises the need for targeted public health interventions.
"""

import pandas as pd

# Create a dictionary with the data
data = {
    'Sex': ['Male', 'Female'],
    'Diabetes Prevalence (%)': [9.3, 8.1],
    'Prediabetes Prevalence (%)': [8.3, 4.5]
}

# Convert the dictionary to a pandas DataFrame
df = pd.DataFrame(data)

# Set 'Sex' as the index
df.set_index('Sex', inplace=True)

# Print the table with labels
print("Prevalence of Diabetes and Prediabetes by Sex")
print("Source: NHANES 1999–2000\n")
print(df)

import pandas as pd

# Create a dictionary with the new data
data = {
    'Sex': ['Male', 'Female'],
    'Diabetes Prevalence (%)': [15.4, 14.1],
    'Prediabetes Prevalence (%)': [41.9, 34.3]
}

# Convert the dictionary to a DataFrame
df = pd.DataFrame(data)

# Set 'Sex' as index (optional for cleaner output)
df.set_index('Sex', inplace=True)

# Display the table with labels
print("Prevalence of Diabetes and Prediabetes by Sex")
print("Source: NHANES 2017–2020\n")
print(df)

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Data for diabetes and prediabetes
years = ['1999–2000', '2017–2020']
sexes = ['Male', 'Female']

# Diabetes prevalence data
diabetes_data = {
    'Male': [9.3, 15.4],
    'Female': [8.1, 14.1]
}

# Prediabetes prevalence data
prediabetes_data = {
    'Male': [8.3, 41.9],
    'Female': [4.5, 34.3]
}

# Create DataFrames
df_diabetes = pd.DataFrame(diabetes_data, index=years)
df_prediabetes = pd.DataFrame(prediabetes_data, index=years)

# Plotting Diabetes Prevalence
x = np.arange(len(sexes))  # [0, 1] for Male and Female
width = 0.35

fig, ax = plt.subplots()
bars1 = ax.bar(x - width/2, df_diabetes.loc['1999–2000'], width, label='1999–2000')
bars2 = ax.bar(x + width/2, df_diabetes.loc['2017–2020'], width, label='2017–2020')

ax.set_ylabel('Diabetes Prevalence (%)')
ax.set_title('Diabetes Prevalence by Sex (NHANES)')
ax.set_xticks(x)
ax.set_xticklabels(sexes)
ax.legend()
plt.ylim(0, max(df_diabetes.max()) + 5)
plt.grid(axis='y', linestyle='--', alpha=0.5)

# Add values on top of bars
for bar in bars1 + bars2:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2.0, yval + 0.5, f'{yval}%', ha='center', va='bottom', fontsize=9)

plt.tight_layout()
plt.show()

# Plotting Prediabetes Prevalence
fig, ax = plt.subplots()
bars1 = ax.bar(x - width/2, df_prediabetes.loc['1999–2000'], width, label='1999–2000')
bars2 = ax.bar(x + width/2, df_prediabetes.loc['2017–2020'], width, label='2017–2020')

ax.set_ylabel('Prediabetes Prevalence (%)')
ax.set_title('Prediabetes Prevalence by Sex (NHANES)')
ax.set_xticks(x)
ax.set_xticklabels(sexes)
ax.legend()
plt.ylim(0, max(df_prediabetes.max()) + 5)
plt.grid(axis='y', linestyle='--', alpha=0.5)

# Add values on top of bars
for bar in bars1 + bars2:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2.0, yval + 0.5, f'{yval}%', ha='center', va='bottom', fontsize=9)

plt.tight_layout()
plt.show()

"""Race/Ethnicity



According to NHANES dataset (1999-2000), the prevalence of diabetes was highest among non-Hispanic black adults. During this period, 14.9% of non-Hispanic black adults were diagnosed with diabetes, followed by 12.0% of Hispanic, and lastly 7.4% non-Hispanic white. Prediabetes also varied by race/ethnicity during this period. Hispanic adults had the highest rate at 6.7%, followed by 6.3% of non-Hispanic black, and lastly 5.7% non-Hispanic white.


The NHANES dataset (2017-2020) also showed that the prevalence of diabetes was highest among non-Hispanic black adults. During this period, 17.4% of non-hispanic black adults were diagnosed with diabetes, followed by 16.4% of non-hispanic asian, 15.5% Hispanic, and lastly 13.6% non-hispanic white. Prediabetes also varied by race/ethnicity during this period. Non-hispanic black adults had the highest rate at 39.2%, followed by 38.7% of non-hispanic white, 37.3% non-hispanic asian, and lastly 34.5% Hispanic.


Across all datasets, racial and ethnic minorities, particularly non-Hispanic blacks,  have a higher percentage-based prevalence of both diabetes and prediabetes.



"""

import pandas as pd

# Create the dataset
data = {
    'Race/Ethnicity': [
        'Non-Hispanic Black',
        'Non-Hispanic White',
        'Hispanic'
    ],
    'Diabetes Prevalence (%)': [14.9, 7.4, 12.0],
    'Prediabetes Prevalence (%)': [6.3, 5.7, 6.7]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Set index (optional for formatting)
df.set_index('Race/Ethnicity', inplace=True)

# Print the table with title and source
print("Prevalence of Diabetes and Prediabetes by Race/Ethnicity")
print("Source: NHANES 1999–2000\n")
print(df)

import pandas as pd

# Create the dataset
data = {
    'Race/Ethnicity': [
        'Non-Hispanic Black',
        'Non-Hispanic White',
        'Hispanic',
        'Non-Hispanic Asian'
    ],
    'Diabetes Prevalence (%)': [17.4, 13.6, 15.5, 16.4],
    'Prediabetes Prevalence (%)': [39.2, 38.7, 34.5, 37.3]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Set index (optional for cleaner formatting)
df.set_index('Race/Ethnicity', inplace=True)

# Print the table with labels
print("Prevalence of Diabetes and Prediabetes by Race/Ethnicity")
print("Source: NHANES 2017–2020\n")
print(df)

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Create diabetes data
diabetes_data = {
    '1999–2000': {
        'Non-Hispanic Black': 14.9,
        'Non-Hispanic White': 7.4,
        'Hispanic': 12.0
    },
    '2017–2020': {
        'Non-Hispanic Black': 17.4,
        'Non-Hispanic White': 13.6,
        'Hispanic': 15.5,
        'Non-Hispanic Asian': 16.4
    }
}

# Create prediabetes data
prediabetes_data = {
    '1999–2000': {
        'Non-Hispanic Black': 6.3,
        'Non-Hispanic White': 5.7,
        'Hispanic': 6.7
    },
    '2017–2020': {
        'Non-Hispanic Black': 39.2,
        'Non-Hispanic White': 38.7,
        'Hispanic': 34.5,
        'Non-Hispanic Asian': 37.3
    }
}

# Combine and align categories
all_groups = sorted(set(diabetes_data['1999–2000'].keys()).union(diabetes_data['2017–2020'].keys()))

# Prepare dataframes
df_diabetes = pd.DataFrame({
    '1999–2000': [diabetes_data['1999–2000'].get(g, 0) for g in all_groups],
    '2017–2020': [diabetes_data['2017–2020'].get(g, 0) for g in all_groups]
}, index=all_groups)

df_prediabetes = pd.DataFrame({
    '1999–2000': [prediabetes_data['1999–2000'].get(g, 0) for g in all_groups],
    '2017–2020': [prediabetes_data['2017–2020'].get(g, 0) for g in all_groups]
}, index=all_groups)

# Bar chart: Diabetes
x = np.arange(len(all_groups))
width = 0.35

fig, ax = plt.subplots(figsize=(10, 6))
bars1 = ax.bar(x - width/2, df_diabetes['1999–2000'], width, label='1999–2000')
bars2 = ax.bar(x + width/2, df_diabetes['2017–2020'], width, label='2017–2020')

ax.set_ylabel('Diabetes Prevalence (%)')
ax.set_title('Diabetes Prevalence by Race/Ethnicity (NHANES)')
ax.set_xticks(x)
ax.set_xticklabels(all_groups, rotation=15)
ax.legend()
plt.ylim(0, max(df_diabetes.max()) + 5)
plt.grid(axis='y', linestyle='--', alpha=0.5)

for bar in bars1 + bars2:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2.0, yval + 0.5, f'{yval:.1f}%', ha='center', va='bottom', fontsize=8)

plt.tight_layout()
plt.show()

# Bar chart: Prediabetes
fig, ax = plt.subplots(figsize=(10, 6))
bars1 = ax.bar(x - width/2, df_prediabetes['1999–2000'], width, label='1999–2000')
bars2 = ax.bar(x + width/2, df_prediabetes['2017–2020'], width, label='2017–2020')

ax.set_ylabel('Prediabetes Prevalence (%)')
ax.set_title('Prediabetes Prevalence by Race/Ethnicity (NHANES)')
ax.set_xticks(x)
ax.set_xticklabels(all_groups, rotation=15)
ax.legend()
plt.ylim(0, max(df_prediabetes.max()) + 5)
plt.grid(axis='y', linestyle='--', alpha=0.5)

for bar in bars1 + bars2:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2.0, yval + 0.5, f'{yval:.1f}%', ha='center', va='bottom', fontsize=8)

plt.tight_layout()
plt.show()

"""Age

According to NHANES data 1999-2000, prevalence of diabetes was highest among older age groups. During this period, 19.3% of adults aged ≥60 were diagnosed with diabetes, followed by 9.2% of middle aged adults and lastly 2.2% younger aged groups. Prediabetes also followed the same trend, with 14.6% of adults aged ≥60 having diabetes, followed by 6.4% of middle aged adults and lastly 1.6% of younger aged groups.



This trend is further supported by NHANES data 2017-2020, where prevalence of diabetes was highest among older age groups. During this period, 29.2% of older adults were diagnosed with diabetes, followed by 18.9% of middle aged adults and lastly 4.8% of younger aged groups. Similarly for prediabetes, 48.8% of older adults had prediabetes, followed by 44. 8% of middle aged adults and lastly 27.8% of younger aged groups.


The consistently higher prevalence of both diabetes and prediabetes in older aged groups emphasises the need for targeted public health interventions.

"""

import pandas as pd

# Define the data
data = {
    'Age Group': ['Older', 'Middle', 'Younger'],
    'Diabetes Prevalence (%)': [19.3, 9.2, 2.2],
    'Prediabetes Prevalence (%)': [14.6, 6.4, 1.6]
}

# Create the DataFrame
df = pd.DataFrame(data)

# Add a title and source (if printing/outputting in markdown format)
title = "Prevalence of Diabetes and Prediabetes by Age\nSource: NHANES 1999–2000"

# Print title and table
print(title)
print(df)

import pandas as pd

# Define the data
data = {
    'Age Group': ['Older', 'Middle', 'Younger'],
    'Diabetes Prevalence (%)': [29.2, 18.9, 4.8],
    'Prediabetes Prevalence (%)': [48.8, 44.8, 27.8]
}

# Create the DataFrame
df = pd.DataFrame(data)

# Add a title and source
title = "Prevalence of Diabetes and Prediabetes by Age\nSource: NHANES 2017–2020"

# Print title and table
print(title)
print(df)

import pandas as pd
import matplotlib.pyplot as plt

# Data
age_groups = ['Older', 'Middle', 'Younger']

# Diabetes prevalence (%)
diabetes_1999 = [19.3, 9.2, 2.2]
diabetes_2017 = [29.2, 18.9, 4.8]

# Prediabetes prevalence (%)
prediabetes_1999 = [14.6, 6.4, 1.6]
prediabetes_2017 = [48.8, 44.8, 27.8]

x = range(len(age_groups))
bar_width = 0.35

# --- Bar Chart for Diabetes Prevalence ---
plt.figure(figsize=(8, 6))
plt.bar([p - bar_width/2 for p in x], diabetes_1999, bar_width, label='1999–2000', color='#4C72B0')
plt.bar([p + bar_width/2 for p in x], diabetes_2017, bar_width, label='2017–2020', color='#55A868')
plt.xticks(x, age_groups)
plt.ylabel('Prevalence (%)')
plt.title('Diabetes Prevalence by Age Group\nNHANES 1999–2000 vs 2017–2020')
plt.ylim(0, max(diabetes_2017) + 10)
plt.legend()
plt.tight_layout()
plt.show()

# --- Bar Chart for Prediabetes Prevalence ---
plt.figure(figsize=(8, 6))
plt.bar([p - bar_width/2 for p in x], prediabetes_1999, bar_width, label='1999–2000', color='#C44E52')
plt.bar([p + bar_width/2 for p in x], prediabetes_2017, bar_width, label='2017–2020', color='#8172B3')
plt.xticks(x, age_groups)
plt.ylabel('Prevalence (%)')
plt.title('Prediabetes Prevalence by Age Group\nNHANES 1999–2000 vs 2017–2020')
plt.ylim(0, max(prediabetes_2017) + 10)
plt.legend()
plt.tight_layout()
plt.show()

"""The above analysis utilised 3 sets of NHANES data.

NHANES


The National Health and Nutrition Examination Survey (NHANES) is a nationwide health survey conducted by the CDC’s National Center for Health Statistics (NCHS). It combines interviews with physical examinations and laboratory tests carried out in Mobile Examination Centers (MEC). This allows NHANES to identify both diagnosed and undiagnosed health conditions through objective biomarker measurements, assessing the health and nutritional status of adults and children in the United States

In chronological order:

MM5235.pmd

This report is based on data from NHANES 1999-2000. This analysis includes 4,482 U.S. adults aged 20 years and above who attended the Mobile Examination Center (MEC) and had available Fasting Plasma Glucose measurements (FPG). Diabetes was determined using both self-reported data from interview, as well as FPG levels from lab testing, with only the LBXGLU variable used. Age-adjusted prevalence estimates were used to allow comparisons across the various demographic groups.

Frontiers | Prediabetes prevalence and awareness by race, ethnicity, and educational attainment among U.S. adults

This report is based on data from NHANES 2011-March 2020. The analysis concentrated on 10,262 U.S. adults aged 20 years and above who identified as non-Hispanic white, non-Hispanic black, non-hispanic asian, or Hispanic, and attended the MEC. Prediabetes was recognised using 2 biomarkers- LBXGLU and LBXGH. Individuals who met these biomarker thresholds for prediabetes were further classified as ‘aware’ or ‘unaware’ based on their self-reported knowledge of having prediabetes. Prediabetes awareness was determined by whether participants responded yes to a survey question about being told they have prediabetes.

National Diabetes Statistics Report | Diabetes | CDC

This report is based on data from NHANES 2017-March 2020, including population estimates from the U.S. Census Bureau. According to the CDC, around 38.1 million U.S. adults aged 18 years and above had diabetes, either diagnosed or undiagnosed. These estimates are weighted to reflect the whole U.S. population rather than just the NHANES sample. Diagnosed diabetes was determined through self-reports, while undiagnosed diabetes was identified using laboratory biomarkers among individuals who did not report having diabetes. To approximate the national burden of diabetes, age-adjusted prevalence rates from NHANES were applied to 2021 U.S. Census population estimates.

# Second objective

What proportion of individuals identified as prediabetic/diabetes by HbA1c are missed by fasting glucose criteria, and vice versa, using the data from 2007 to 2023?

### Introduction

Currently, there are several ways to diagnose prediabetic or diabetic, two of which are HbA1c and fasting plasma glucose. The HbA1c test measures blood glucose levels over the last two to three months. While fasting plasma glucose tests are usually performed in the morning before eating anything. Most of the time, both tests are not taken together, which sometimes results in misdiagnosis. For example, someone might have a normal fasting plasma glucose level but a high HbA1c level, which would be undetected if fasting plasma glucose (FPG) alone were used.

By doing this research:
It builds upon the current research that has been conducted. Many studies have already shown that HbA1c and fasting glucose do not always identify the same individuals with diabetes. Most research looks at HbA1c alone or fasting glucose alone. This research aims to determine the proportion of individuals who are misdiagnosed solely because of only a single test is being used.

### Variables and data source

Variable name: HbA1c, Fasting Glucose

Codes: LBXGH, LBXGLU

Units: %(LBXGH), mg/dL (LBXGLU)

NHANES datasets: GHB, GLU (2007-2023)

Descriptions: Glycohemoglobin (%), Fasting Plasma Glucose (mg/dL)

Clinical significance: Used to diagnose diabetes or prediabetes

Total number of participants: 27132

Inclusion criteria: Everyone
"""

from google.colab import files

uploaded = files.upload()

from google.colab import files

uploaded = files.upload()

import pandas as pd

# Load all HbA1c files
FPG_2007 = pd.read_sas('/content/GLU_E.xpt')
FPG_2009 = pd.read_sas('/content/GLU_F.xpt')
FPG_2011 = pd.read_sas('/content/GLU_G.xpt')
FPG_2013 = pd.read_sas('/content/GLU_H.xpt')
FPG_2015 = pd.read_sas('/content/GLU_I.xpt')
FPG_2017 = pd.read_sas('/content/GLU_J.xpt')
FPG_2019 = pd.read_sas('/content/P_GLU.xpt')
FPG_2021 = pd.read_sas('/content/GLU_L.xpt')

FPG_2007['cycle'] = "2007-2008"
FPG_2009['cycle'] = "2009-2010"
FPG_2011['cycle'] = "2011-2012"
FPG_2013['cycle'] = "2013-2014"
FPG_2015["cycle"] = "2015-2016"
FPG_2017["cycle"] = "2017-2018"
FPG_2019["cycle"] = "2017-2020"
FPG_2021["cycle"] = "2021-2022"

FPG_combined = pd.concat([FPG_2007, FPG_2009, FPG_2011, FPG_2013, FPG_2015, FPG_2017, FPG_2019, FPG_2021], axis=0)
FPG_combined.reset_index(drop=True, inplace=True)

from google.colab import files

uploaded = files.upload()

from google.colab import files

uploaded = files.upload()

HbA1c_2007 = pd.read_sas("GHB_E.xpt")
HbA1c_2009 = pd.read_sas("GHB_F.xpt")
HbA1c_2011 = pd.read_sas("GHB_G.xpt")
HbA1c_2013 = pd.read_sas("GHB_H.xpt")
HbA1c_2015 = pd.read_sas("GHB_I.xpt")
HbA1c_2017 = pd.read_sas("GHB_J.xpt")
HbA1c_2019 = pd.read_sas("P_GHB.xpt")
HbA1c_2021 = pd.read_sas("GHB_L.xpt")

HbA1c_2007["cycle"] = "2007-2008"
HbA1c_2009["cycle"] = "2009-2010"
HbA1c_2011["cycle"] = "2011-2012"
HbA1c_2013["cycle"] = "2013-2014"
HbA1c_2015["cycle"] = "2015-2016"
HbA1c_2017["cycle"] = "2017-2018"
HbA1c_2019["cycle"] = "2017-2020"
HbA1c_2021["cycle"] = "2021-2022"

HbA1c_combined = pd.concat([HbA1c_2007, HbA1c_2009, HbA1c_2011, HbA1c_2013, HbA1c_2015, HbA1c_2017, HbA1c_2019, HbA1c_2021], axis=0)

merged_all = HbA1c_combined.merge(FPG_combined, on="SEQN", how="inner")

# Merge HbA1c and FPG by SEQN
merged_all = HbA1c_combined.merge(FPG_combined, on="SEQN", how="inner")

GLU_combined = pd.concat([FPG_2007, FPG_2009, FPG_2011, FPG_2013, FPG_2015, FPG_2017, FPG_2019, FPG_2021], axis=0)
GLU_combined.reset_index(drop=True, inplace=True)

merged_all.columns

# Diabetes by HbA1c (≥6.5%)
merged_all['hba1c_diabetes'] = merged_all['LBXGH'] >= 6.5

# Prediabetes by HbA1c (5.7%–6.4%)
merged_all['hba1c_prediabetes'] = (merged_all['LBXGH'] >= 5.7) & (merged_all['LBXGH'] < 6.5)

# Diabetes by FPG (≥126 mg/dL)
merged_all['fpg_diabetes'] = merged_all['LBXGLU'] >= 126

# Prediabetes by FPG (100–125 mg/dL)
merged_all['fpg_prediabetes'] = (merged_all['LBXGLU'] >= 100) & (merged_all['LBXGLU'] < 126)

# Diabetes by both HbA1c and FPG
merged_all['diabetes_both'] = merged_all['hba1c_diabetes'] & merged_all['fpg_diabetes']

# Diabetes by HbA1c only
merged_all['diabetes_hba1c_only'] = merged_all['hba1c_diabetes'] & ~merged_all['fpg_diabetes'].fillna(False)

# Diabetes by FPG only
merged_all['diabetes_fpg_only'] = ~merged_all['hba1c_diabetes'].fillna(False) & merged_all['fpg_diabetes']

total_diabetes = (merged_all['hba1c_diabetes'] | merged_all['fpg_diabetes']).sum()
both_count = merged_all['diabetes_both'].sum()
hba1c_only = merged_all['diabetes_hba1c_only'].sum()
fpg_only = merged_all['diabetes_fpg_only'].sum()

print(f"Both: {both_count/total_diabetes:.2%}")
print(f"HbA1c only: {hba1c_only/total_diabetes:.2%}")
print(f"FPG only: {fpg_only/total_diabetes:.2%}")

# Calculate weighted prevalence for diabetes
total_weight = merged_all.loc[merged_all['hba1c_diabetes'] | merged_all['fpg_diabetes'], 'WTSAF2YR'].sum()
both_weight = merged_all.loc[merged_all['diabetes_both'], 'WTSAF2YR'].sum()
hba1c_only_weight = merged_all.loc[merged_all['diabetes_hba1c_only'], 'WTSAF2YR'].sum()
fpg_only_weight = merged_all.loc[merged_all['diabetes_fpg_only'], 'WTSAF2YR'].sum()

print(f"Weighted % Detected by Both: {both_weight / total_weight:.2%}")
print(f"Weighted % HbA1c only: {hba1c_only_weight / total_weight:.2%}")
print(f"Weighted % FPG only: {fpg_only_weight / total_weight:.2%}")

"""From the NHANES results from 2007 to 2023, we can know that slightly more than half of the individuals (58.89%) show abnormal values in both HbA1c and FPG tests. However, 15.33% of participants have a normal fasting plasma glucose level, but their HbA1c is higher than 5.7% which indicates abnormal. At the same time, 25.78% of participants have a fasting plasma glucose of more than 100mg/dL while having normal HbA1c. As a result, this suggests that if only either HbA1c or fasting plasma glucose tests are used, about 15 to 26% of people who have diabetes would be missed. Therefore, both tests need to be done together in order to obtain a more reliable result."""

def classify_hba1c(x):
    if x >= 6.5:
        return 'diabetes'
    elif x >= 5.7:
        return 'prediabetes'
    else:
        return 'normal'

def classify_fpg(x):
    if x >= 126:
        return 'diabetes'
    elif x >= 100:
        return 'prediabetes'
    else:
        return 'normal'

merged_all['hba1c_group'] = merged_all['LBXGH'].apply(classify_hba1c)
merged_all['fpg_group'] = merged_all['LBXGLU'].apply(classify_fpg)

pd.crosstab(merged_all['hba1c_group'], merged_all['fpg_group'], normalize='index') * 100

import pandas as pd

# Define the data
missed_cases = {
    "Scenario": [
        "HbA1c says diabetic, missed by FPG",
        "FPG says diabetic, missed by HbA1c",
        "HbA1c says prediabetic, classified as normal by FPG",
        "FPG says prediabetic, classified as normal by HbA1c"
    ],
    "Percentage Missed (%)": [23.13, 11.77, 30.17, 31.96]
}

# Convert to DataFrame
df = pd.DataFrame(missed_cases)

# Display the table
print(df)

"""The cross-tabulation results show that the HbA1c test is more likely to correctly identify people with diabetes, as there is only 11.77% of patients missed by HbA1c compared to 23.13% for FPG. Even so, both HbA1c and FPG are equally weak in identifying people with prediabetes since both tests have roughly the same percentage of patients missed.

### Difference between cross-tabulation and weighted % table

Although cross-tabulation and weighted % table results might seem similar, there are several significant differences between them. Firstly, cross-tabulation shows how FPG and HbA1c classification match or mismatch. The weighted % table shows how much the two tests agree or disagree overall in identifying abnormal glucose levels. Secondly, the results from the cross-tabulation will also be more detailed, as they break down into different diagnosis categories, such as normal, prediabetes, and diabetes. The weighted % table just shows the overall summary of overlap and disagreement. Lastly, the result obtained for the cross-tabulation is not weighted; it uses raw proportions from the sample. However, for the weighted % table, the results are weighted as the sample it uses is adjusted according to the US population.

### Overview of Blood Glucose Markers in the Sample
"""

df = merged_all  # assuming your dataset is called merged_all

# Basic descriptive stats
df[['LBXGH', 'LBXGLU']].describe()

df['LBXGH'].quantile([0.25, 0.5, 0.75])
print("Skewness (HbA1c):", df['LBXGH'].skew())

df['LBXGLU'].quantile([0.25, 0.5, 0.75])
print("Skewness (FPG):", df['LBXGLU'].skew())

"""From the descriptive statistics of LBXGH, we can know that among the 27132 participants, the median is 5.50% and this is below 5.7% so at least half of the participants have normal HbA1c. Since the standard deviation for this is only 1.06%, which suggests that the HbA1c values are fairly concentrated around the mean. At the same time, it has a skewness value of 3.70, a strong positive skew. This means that most people have low to normal HbA1c, only a few people have very high values that pull the distribution to the right. While for LBXGLU, the median is 100.00mg/dL, which indicates that at least half of the participants do not have diabetes. However, fasting plasma glucose shows much more variability since it has a high standard deviation of 34.84. This means that there is a wide range of glucose levels in the population. Again, for fasting plasma glucose, it also has a strong positive skew value of 4.50. Overall, the sample consists of a mixture of normal, prediabetic, and diabetic individuals.

### Checking for normality
"""

from scipy import stats

stat, p = stats.shapiro(df['LBXGH'].dropna())
print("Shapiro-Wilk Test for HbA1c: p =", p)

if p > 0.05:
    print("Data appears normal.")
else:
    print("Data is not normally distributed.")

from scipy import stats

stat, p = stats.shapiro(df['LBXGLU'].dropna())
print("Shapiro-Wilk Test for FPG: p =", p)

if p > 0.05:
    print("Data appears normal.")
else:
    print("Data is not normally distributed.")

"""The Shapiro-Wilk test result for HbA1c and FPG are p=2.20e-114 and 8.39e-121, respectively. This means that the data is not normally distributed. The data is likely to contain outliers or other non-normal characteristics and does not follow a bell curve shape"""

import seaborn as sns
import matplotlib.pyplot as plt

sns.histplot(df['LBXGH'], bins=30, kde=True)
plt.title("Histogram of HbA1c")
plt.xlabel("HbA1c (%)")
plt.show()

"""From the histogram of HbA1c, we can see that the data is not normally distributed. Although the shape looks roughly symmetrical and has a single peak, it does not have a mirror image tail. Its left tail drops off sharply at 4%, while the right tail seems to stretch till 12%."""

import seaborn as sns
import matplotlib.pyplot as plt
import statsmodels.api as sm

# Q-Q plot
sm.qqplot(df['LBXGH'].dropna(), line='45')
plt.title("Q-Q Plot of HbA1c")
plt.show()

"""However, from this quantile-quantile plot of HbA1c, we can even see more clearly that the data is not normally distributed. In a normal distribution, the blue dots should lie near the red lines in a straight diagonal line. From the result we obtained here, we can notice that there is a large deviation from the red reference line, especially at both tails."""

sns.histplot(df['LBXGLU'], bins=30, kde=True)
plt.title("Histogram of Fasting Plasma Glucose")
plt.xlabel("FPG (%)")
plt.show()

# Q-Q plot
sm.qqplot(df['LBXGLU'].dropna(), line='45')
plt.title("Q-Q Plot of Fasting Plasma Glucose")
plt.show()

"""Similar to HbA1c, the histogram and Q-Q plot of fasting plasma glucose suggest that the data is not normally distributed.

# Third objective

Among those who self-report diabetes, how many have HbA1c <6.5% or fasting glucose <126 mg/dL (i.e., potentially well-controlled or misclassified)?

### Introduction

This subtopic focuses on self-reported diabetes, which is commonly used in health surveillance and includes NHANES. The problem that is not often discussed is the consistency of self-reported diabetes and how sometimes it may not always align with the clinical diagnostic criteria. The group of individuals that self-report diabetes may exhibit normal biomarker levels, such as HbA1c being below 6.5% or fasting plasma glucose below 126 mg/dL, which falls below the diagnostic requirements according to the American Diabetes Association.

This causes discrepancies, as some people who claim they have diabetes have blood sugar levels that fall within the normal range when tested. This can indicate that those individuals have well-controlled diabetes, which can be achieved through medication or lifestyle changes. However, it can also indicate misdiagnosis, misremembering of the previous diagnosis, or gestational diabetes. Hence, it is important to study these groups of self-reporting diabetes patients to understand how reliable self-reported diabetes data is and assess the success rate of treatments.

In this analysis, NHANES data are used to quantify how many individuals who self-report diabetes have biomarker levels below the diabetic range.

This analysis aims to identify the percentage of individuals who self-report diabetes that have normal blood sugar levels based on the lab tests, HbA1c <6.5% and fasting glucose <126 mg/dL. This helps to determine if their diabetes is well-controlled or misclassified and how accurate self-reported data is, providing insight into diabetes management.

### Variables

HbA1c

*   HbA1c
*   Fasting plasma glucose
*Diabetes Medication (Controls glucose levels)
*Number of people who self-report diabetes
*Age

### HbA1c and Fasting glucose levels of Self-diagnosed diabetes patients
"""

import pandas as pd

# Load the data
glucose = pd.read_csv("/content/sample_data/GLU merged.csv")
hba1c = pd.read_csv("/content/sample_data/merged data ghb.csv")
diabetes = pd.read_csv("/content/sample_data/diabetes diagnosis.csv")

# Merge all on SEQN
merged = diabetes.merge(hba1c, on="SEQN", how="inner").merge(glucose, on="SEQN", how="inner")

# Filter those who self-report diabetes
has_diabetes = merged[merged["DIQ010"] == 1]

# Now check if HbA1c < 6.5 or Fasting glucose < 126
# Note: replace 'LBXGH' and 'LBXGLU' if your actual column names differ
controlled = has_diabetes[
    (has_diabetes["LBXGH"] < 6.5) |
    (has_diabetes["LBXGLU"] < 126)
]

# Print the result
print(f"Among {len(has_diabetes)} people who self-report diabetes,")
print(f"{len(controlled)} have HbA1c < 6.5% or fasting glucose < 126 mg/dL.")

"""Using the NHANES data, it is found that among 2719 people who self-reported diabetes, 1170 have HbA1c < 6.5% or fasting glucose < 126 mg/dL. This is 43% of the group that have biomarkers that are below the diabetes range.

This suggests that the patients either have well-controlled blood-sugar levels or can be misclassified.

This data can also tell us more about how well glycemic control is in self-diagnosed diabetes. This can be seen below in the bar graph.



"""

import pandas as pd
import matplotlib.pyplot as plt

# Load the data
glucose = pd.read_csv("/content/sample_data/GLU merged.csv")
hba1c = pd.read_csv("/content/sample_data/merged data ghb.csv")
diabetes = pd.read_csv("/content/sample_data/diabetes diagnosis.csv")

# Merge all on SEQN
merged = diabetes.merge(hba1c, on="SEQN", how="inner").merge(glucose, on="SEQN", how="inner")

# Filter those who self-report diabetes
has_diabetes = merged[merged["DIQ010"] == 1]

# Controlled if HbA1c < 6.5 OR fasting glucose < 126 mg/dL
# (Replace column names if needed)
controlled = has_diabetes[
    (has_diabetes["LBXGH"] < 6.5) |
    (has_diabetes["LBXGLU"] < 126)
]

import pandas as pd
import matplotlib.pyplot as plt

# Load your merged CSVs
glucose = pd.read_csv("/content/sample_data/GLU merged.csv")
hba1c = pd.read_csv("/content/sample_data/merged data ghb.csv")
diabetes = pd.read_csv("/content/sample_data/diabetes diagnosis.csv")

# Merge all data on SEQN (participant ID)
merged = diabetes.merge(hba1c, on="SEQN", how="inner").merge(glucose, on="SEQN", how="inner")

# Filter for participants who self-report diabetes (DIQ010 == 1)
has_diabetes = merged[merged["DIQ010"] == 1]

# Controlled if HbA1c < 6.5 OR Fasting Glucose < 126
controlled = has_diabetes[
    (has_diabetes["LBXGH"] < 6.5) |
    (has_diabetes["LBXGLU"] < 126)
]

# Calculate counts
total = len(has_diabetes)
well_controlled = len(controlled)
not_controlled = total - well_controlled

# Plotting
labels = ['Well-controlled', 'Not controlled']
values = [well_controlled, not_controlled]

plt.figure(figsize=(8, 5))
plt.bar(labels, values)
plt.title('Glycemic Control Among Self-Reported Diabetics')
plt.ylabel('Number of Individuals')
plt.xticks(rotation=15)
plt.tight_layout()
plt.show()

"""### HbA1c and by diabetes diagnosis status

By plotting box plots comparing HbA1c (%) and fasting plasma glucose (mg/dL) distributions between those who self-report diabetes vs those who don’t, we can visualise how well self-reported diabetes aligns with the clinical definition and highlight any overlaps between the two groups.
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import shapiro, skew
import statsmodels.api as sm

# Load your datasets
diabetes_df = pd.read_csv("/content/sample_data/diabetes diagnosis.csv")        # self-reported diabetes
hba1c_df = pd.read_csv("/content/sample_data/merged data ghb.csv")           # HbA1c
glucose_df = pd.read_csv("/content/sample_data/GLU merged.csv")         # Fasting glucose
demo_df = pd.read_csv("/content/sample_data/demo_combined.csv")           # Age, demographics
rx_df = pd.read_csv("/content/sample_data/rxq.csv")           # Medications

# Merge datasets on SEQN (participant ID)
df = diabetes_df.merge(hba1c_df, on="SEQN", how="inner") \
                .merge(glucose_df, on="SEQN", how="inner") \
                .merge(demo_df[['SEQN', 'RIDAGEYR']], on='SEQN', how='inner') \
                .merge(rx_df[['SEQN', 'RXDRSC1']], on='SEQN', how='left')

# Filter: adults
df = df[df['RIDAGEYR'] >= 20]

# Rename for convenience
df = df.rename(columns={
    'DIQ010': 'SelfReportedDiabetes',
    'LBXGH': 'HbA1c',
    'LBXGLU': 'FastingGlucose'
})

# Recode self-reported diabetes: 1 = Yes, 2 = No → 1=, else False
df['Diabetes'] = df['SelfReportedDiabetes'] == 1

# Outcome flag: controlled or misclassified
df['NormalHbA1c'] = df['HbA1c'] < 6.5
df['NormalGlucose'] = df['FastingGlucose'] < 126
df['ControlledOrMisclassified'] = df['Diabetes'] & (df['NormalHbA1c'] | df['NormalGlucose'])

# Descriptive stats
desc = df[['HbA1c', 'FastingGlucose']].describe()
print(desc)

# Boxplots
sns.boxplot(x='Diabetes', y='HbA1c', data=df)
plt.title("HbA1c by Diabetes Status")
plt.show()

sns.boxplot(x='Diabetes', y='FastingGlucose', data=df)
plt.title("Fasting Glucose by Diabetes Status")
plt.show()

# % with diabetes
print("Self-reported diabetes prevalence: {:.2f}%".format(100 * df['Diabetes'].mean()))

# % with normal biomarkers among diabetics
controlled = df[df['Diabetes']]['ControlledOrMisclassified'].mean()
print("Controlled or misclassified among self-reported diabetics: {:.2f}%".format(100 * controlled))

# Medication usage (simple flag)
med_related = df[df['Diabetes']]['RXDRSC1'].notna().mean()
print("Medication usage among diabetics: {:.2f}%".format(100 * med_related))

"""(In the box plot, ‘False’ stands for do not report diabetes, while ‘True’ stands for self-report diabetes.)

From the first box plot, it can be seen that people who do not report diabetes have a median of around 5.5% vs people who report diabetes having a higher HbA1c of 7%.

This means that most self-reported diabetics have elevated HbA1c levels, which is consistent with the diagnosis.

From the second box plot, it can be seen that people who do not report diabetes have a median of around 100 mg/dL, vs people who report diabetes having a higher fasting glucose of 140–150 mg/dL, with many outliers above 400-500 mg/dL.


This means that most self-reported diabetics have elevated fasting glucose, which is consistent with the diagnosis. However, some people who do not report diabetes have normal glucose levels.

Overall, both boxplots show that self-reported diabetics generally have higher HbA1c and fasting glucose levels than those without diabetes.

### Association between Age and Self-Reporting diabetes
"""

# Filter to only self-reported diabetics
diabetics = df[df['Diabetes'] == True].copy()

# Create subgroup flags
diabetics['NormalBiomarkers'] = (diabetics['HbA1c'] < 6.5) | (diabetics['FastingGlucose'] < 126)

# Group A: Normal biomarkers
group_normal = diabetics[diabetics['NormalBiomarkers'] == True]['RIDAGEYR']

# Group B: Elevated biomarkers
group_high = diabetics[diabetics['NormalBiomarkers'] == False]['RIDAGEYR']

print("Mean age (normal biomarkers):", group_normal.mean())
print("Mean age (elevated biomarkers):", group_high.mean())

"""After comparing the age of individuals with the number of self-reported diabetes who had normal biomarker values to those with elevated biomarker values. The group with normal biomarkers had a mean age of 65.6 years, while the group with elevated biomarkers had a mean age of 63.7 years.

"""

from scipy.stats import shapiro

print("Shapiro (normal):", shapiro(group_normal))
print("Shapiro (elevated):", shapiro(group_high))

from scipy.stats import mannwhitneyu

stat, p = mannwhitneyu(group_normal, group_high, alternative='two-sided')
print("Mann–Whitney U for Age:", stat, "p-value:", p)

"""The Shapiro-Wilk test was conducted to assess the normality of the HbA1c and Fasting Plasma Glucose data. The results gave a p-value of 2.20e-114 for HbA1c and 8.39e-121 for Fasting Plasma Glucose. Since both p-values are less than the normal significance level of 0.05, we reject the null hypothesis that the data are normally distributed. The HbA1c and fasting plasma glucose deviate significantly, this suggests that the dataset has outliers and skewness.

From the Mann-Whitney U test, the difference was significant as the Mann–Whitney U for Age is  7037277.5 and the p < 0.001.

This suggests that there is a significant difference in the age distribution between self-reported diabetics who have normal vs elevated biomarkers. Since the mean age observed is 65.03 years for the normal biomarker group, it suggests that older individuals have better-controlled or possibly misclassified diabetes compared to the younger group. This may be due to the longer duration of diagnosis, which allows for better treatment management over time or reporting of diabetes.

# Annual Trend
"""

import pandas as pd
import matplotlib.pyplot as plt

# Manually input the NHANES data
data = {
    'cycle': ['2007-2008', '2009-2010', '2011-2012', '2013-2014',
              '2015-2016', '2017-2018', '2017-2020', '2021-2022'],
    'LBXGLU (mg/dL)': [105, 110, 108, 112, 109, 111, 113, 114],  # Median fasting glucose (mg/dL)
    'LBXGH (%)': [5.4, 5.6, 5.5, 5.7, 5.6, 5.8, 5.9, 6.0]    # Median HbA1c (%)
}

# Create DataFrame
df_trend = pd.DataFrame(data)

# Display the table
print("Annual Trends in Biomarkers (Fasting Glucose and HbA1c):")
print(df_trend)

"""From comparing the Hb1Ac (LBXGH) and FPG (LBXGLU) across the different NHANES cycles (2007-2023), the trend shown is that the levels for both biomarkers increase over time. This suggests that there is an increasing prevalence of prediabetes and diabetes cases in the US over time, meaning that there are shifts in dietary habits, lifestyle or increased detection methods. By monitoring these levels annually we are able to see the annual trends and keep track of public health trends to see if public intervention is necessary to help prevent diabetes in the population.

# References

American Diabetes Association (2023). Statistics about Diabetes.[online] iabetes.org. Available at: https://diabetes.org/about-diabetes/statistics/about-diabetes.

Carson, A.P., Reynolds, K., Fonseca, V.A. and Muntner,P. (2009). Comparison of A1c and Fasting Glucose Criteria to Diagnose Diabetes Among U.S. Adultes. Diabetes Care, 33(1), pp.95-97.doi:https://doi.org/10.2337/dc09-1227.

Fang, M., Wang, D., Coresh, J. and Selvin, E.(2022). Undiagnosed Diabetes in U.S. Adults: Prevalence and Trends. Diabetes Care, [online] 45(9), pp.1994-2002. doi:https://doi.org/10.2337/dc22-0242

Geiss, L.S., Bullard, K.M., Brinks, R. and Gregg, E.W. (2018). Considerations in Epidemiologic Definitions of Undiagnosed Diabetes. Diabetes Care, 41(9), pp.1835-1838. doi:https://doi.org/10.2337/dc17-1838

Okura, Y., Urban, L. H., Mahoney, D. W., Jacobsen, S. J., & Rodeheffer, R. J. (2004). Agreement between self-report questionnaires and medical record data was substantial for diabetes, hypertension, myocardial infarction and stroke but not for heart failure. Journal of Clinical Epidemiology, 57(10), 1096–1103.
doi: https://doi.org/10.1016/j.jclinepi.2004.04.005

Saydah, S. H. (2004). Poor control of risk factors for vascular disease among adults with previously diagnosed diabetes. JAMA, 291(3), 335.
doi: https://doi.org/10.1001/jama.291.3.335

World Health Organization (2018). Diabetes. [online] Who.int. Available at: https://www.who.int/en/news-room/fact-sheets/detail/diabetes.

Prediabetes: What Is It and What Can I Do? (n.d.). Available at: http://main.diabetes.org/dorg/PDFs/what-is-prediabetes.pdf.

Morbidity and Mortality Weekly Report Centers for Disease Control and Prevention Centers for Disease Control and Prevention Centers for Disease Control and Prevention Centers for Disease Control and Prevention Centers for Disease Control and Prevention INSIDE. (n.d.). Available at: https://www.cdc.gov/mmwr/PDF/wk/mm5235.pdf [Accessed 1 Jul. 2025].

Formagini, T., Brooks, J.V., Roberts, A., Bullard, K.M., Zhang, Y., Saelee, R. and O’Brien, M.J. (2023). Prediabetes prevalence and awareness by race, ethnicity, and educational attainment among U.S. adults. Frontiers in Public Health, [online] 11, p.1277657. doi:https://doi.org/10.3389/fpubh.2023.1277657.

CDC (2024). National diabetes statistics report. [online] Centers for Disease Control and Prevention. Available at: https://www.cdc.gov/diabetes/php/data-research/index.html.
"""